@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthProvider
@inject IJSRuntime Js
@inject NavigationManager NavManager
@inject INotificationService NotificationService

<PageTitle>MyRental.Blazor</PageTitle>

<div class="wrapper">
    <header>
        <a href="/"><img src="images/logo.png" alt="My Rental" width="90" height="90"/></a>
        <ul>
            <AuthorizeView Roles="Admin">
                <li><a href="/admin"><i class="bi bi-laptop"></i>Admin</a></li>
            </AuthorizeView>
            
            <AuthorizeView>
                <Authorized>
                    <li><a href="/user/account"><i class="bi bi-house-fill"></i>Account</a></li>
                    <li><a @onclick="Logout" href="javascript:void(0)"><i class="bi bi-door-closed-fill"></i>Logout</a></li>
                </Authorized>
    
                <NotAuthorized>
                    <li><a href="/auth/register"><i class="bi bi-door-open"></i>Register</a></li>
                    <li><a href="/auth/login"><i class="bi bi-door-open"></i>Login</a></li>
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </header>
    
    <main>
        <article class="content px-4">
            <ErrorBoundary>
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    @HandleExceptionAsync();
                </ErrorContent>
            </ErrorBoundary>
        </article>
    </main>
    
    <footer class="text-center">
        <h2>Subscribe to newsletter
            <button class="btn btn-info" @onclick="SetFooter"><i class="@GetIconClass()"></i></button>
        </h2>

        <div class="@GetFooterClass()">
            <EditForm class="mb-5" Model="_email">
                <div>
                    <h4>Write your email here</h4>
                    <InputText class="form-control" id="Email" @bind-Value="_email"></InputText>
                    <button class="btn btn-success" @onclick="SubscribeToNotificationsAsync">Subscribe</button>
                </div>
            </EditForm>
        </div>
    </footer>
</div>

@code{
    string _email = "";
    bool _isFooterShow;

    private async Task SubscribeToNotificationsAsync()
    {
        try
        {
            var result = await new EmailValidator()
                .ValidateAsync(_email);
            
            if (!result.IsValid) throw new Exception("Invalid email");
            
            await NotificationService.SubscribeToNotificationsAsync(_email);
            await Js.InvokeVoidAsync("alert", "Successfully!");
        }
        catch
        {
            await HandleExceptionAsync();
        }
    }
    
    private void SetFooter() => _isFooterShow = !_isFooterShow;
    
    private string GetIconClass() => _isFooterShow ? "bi bi-arrow-up" : "bi bi-arrow-down";

    private string GetFooterClass() => _isFooterShow ? "show" : "hidden";
    
    private async Task Logout()
    {
        var myProvider = (MyAuthenticationStateProvider)AuthProvider;
        await myProvider.LogoutAsync();
    }

    private async Task HandleExceptionAsync()
    {
        await Js.InvokeVoidAsync("alert", "Sorry, something went wrong.");
        NavManager.NavigateTo("/", forceLoad: true);
    }
}