@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthProvider
@inject IJSRuntime Js
@inject NavigationManager NavManager

<PageTitle>MyRental.Blazor</PageTitle>

<header>
    <a href="/"><img src="images/MR.png" alt="My Rental" width="90" height="90"/></a>
    <ul>
        <AuthorizeView Roles="Admin">
            <li><a href="/admin"><i class="bi bi-laptop"></i>Admin</a></li>
        </AuthorizeView>
        
        <AuthorizeView>
            <Authorized>
                <li><a href="/user/account"><i class="bi bi-house-fill"></i>Account</a></li>
                <li><a @onclick="Logout" href="javascript:void(0)"><i class="bi bi-door-closed-fill"></i>Logout</a></li>
            </Authorized>

            <NotAuthorized>
                <li><a href="/auth/sign-up"><i class="bi bi-door-open"></i>Register</a></li>
                <li><a href="/auth/login"><i class="bi bi-door-open"></i>Login</a></li>
            </NotAuthorized>
        </AuthorizeView>
    </ul>
</header>

<main>
    <article class="content px-4">
        <ErrorBoundary>
            <ChildContent>
                @Body
            </ChildContent>
            <ErrorContent>
                @HandleException();
            </ErrorContent>
        </ErrorBoundary>
    </article>
</main>

@code{
    private async Task Logout()
    {
        var myProvider = (MyAuthenticationStateProvider)AuthProvider;
        await myProvider.LogoutAsync();
    }

    private async Task HandleException()
    {
        await Js.InvokeVoidAsync("alert", "Sorry, something went wrong.");
        NavManager.NavigateTo("/", forceLoad: true);
    }
}